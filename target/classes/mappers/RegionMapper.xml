<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shsnc.mapper.RegionMapper">
    <sql id="tableName">region_ip</sql>

    <resultMap id="reportExceptionModel" type="com.shsnc.model.RegionModel">
        <id column="id" property="id" />
        <result column="ip_start" property="ipStart" />
        <result column="ip_end" property="ipEnd" />
        <result column="con" property="con" />
    </resultMap>

    <!-- 分页配置 -->
    <sql id="pageSql">
        <if test="pagination != null">
            LIMIT #{pagination.start}, #{pagination.pagesize}
        </if>
    </sql>

    <insert id="addEntity" parameterType="com.shsnc.model.RegionModel" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tableName"/>
        (con,ip_start,ip_end)
        VALUES
        (#{con},#{ipStart},#{ipEnd})
    </insert>

    <select id="findCountByCondition" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
        <include refid="tableName"/> r
        <include refid="queryCondition"/>
    </select>

    <select id="findByCondition" resultMap="reportExceptionModel">
        SELECT
        *
        FROM
        <include refid="tableName"/> r
        <include refid="queryCondition"/>
        ORDER BY CONVERT(r.con USING GBK)
        <include refid="pageSql"/>
    </select>


    <sql id="queryCondition">
        <where>
            <if test="condition.ipStart !=null and condition.ipStart !=''">
                r.ip_start = #{condition.ipStart}
            </if>
            <if test="condition.ipEnd !=null and condition.ipEnd !=''">
                AND r.ip_end = #{condition.ipEnd}
            </if>
            <if test="condition.con !=null and condition.con !=''">
                AND r.con LIKE concat('%',#{condition.con},'%')
            </if>
            <if test="condition.condition !=null and condition.condition !=''">
                AND (
                    r.ip_start LIKE concat('%',#{condition.condition},'%')
                    or r.ip_end LIKE concat('%',#{condition.condition},'%')
                    or r.con LIKE concat('%',#{condition.condition},'%')
                )
            </if>
        </where>
    </sql>

</mapper>